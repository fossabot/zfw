---
name: release

on:
  pull_request:
    types: [closed]

env:
  APP_NAME: 'zfw'
  ZFW_VERSION: '1.0'
  MAINTAINER: 'r-caamano'
  DESC: 'An ebpf based statefull fw for openziti edge-routers and tunnelers'
  
jobs:   
 build-linux-packages:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - pkg: deb
            asset_content_type: application/vnd.debian.binary-package
    steps:
      - uses: actions/checkout@v3
      - name: Install EBPF Packages
        run: |
          sudo apt-get update -qq
          sudo apt-get upgrade -yqq
          sudo apt-get install -y jq gcc clang libc6-dev-i386 libbpfcc-dev libbpf-dev libjson-c-dev
      - name:  Compile Object file from Source
        run: |
          clang -g -O2 -Wall -Wextra -target bpf -c -o files/bin/zfw_tc_ingress.o src/zfw_tc_ingress.c
          clang -g -O2 -Wall -Wextra -target bpf -c -o files/bin/zfw_xdp_tun_ingress.o src/zfw_xdp_tun_ingress.c
          clang -g -O2 -Wall -Wextra -target bpf -c -o files/bin/zfw_tc_outbound_track.o src/zfw_tc_outbound_track.c
          clang -O2 -Wall -Wextra -o files/bin/zfw src/zfw.c
          gcc -o files/bin/zfw_tunnwrapper src/zfw_tunnel_wrapper.c -l json-c
      - name: Get version
        run: echo "version=`files/bin/zfw -V`" >> $GITHUB_OUTPUT
        id: version

      - name: create deb
        run: |
          mkdir -p .debpkg/opt/openziti/bin/user
          mkdir -p .debpkg/opt/openziti/etc
          mkdir -p .debpkg/etc
          mkdir -p .debpkg/usr/sbin
          cp -p files/bin/zfw_xdp_tun_ingress.o .debpkg/opt/openziti/bin/
          cp -p files/bin/zfw_tc_ingress.o .debpkg/opt/openziti/bin/
          cp -p files/bin/zfw_tunnwrapper .debpkg/opt/openziti/bin/
          cp -p files/bin/zfw_tc_outbound_track.o .debpkg/opt/openziti/bin/
          cp -p files/bin/zfw .debpkg/opt/openziti/bin/zfw
          cp -p files/scripts/start_ebpf.py .debpkg/opt/openziti/bin/
          cp -p files/scripts/set_xdp_redirect.py .debpkg/opt/openziti/bin/
          cp -p files/scripts/user_rules.sh .debpkg/opt/openziti/bin/user/
          chmod +x .debpkg/opt/openziti/bin/set_xdp_redirect.py
          chmod +x .debpkg/opt/openziti/bin/start_ebpf.py
          chmod +x .debpkg/opt/openziti/bin/user/user_rules.sh
          ln -s .debpkg/opt/openziti/bin/zfw .debpkg/usr/sbin/zfw
      - uses: jiro4989/build-deb-action@v2
        with:
          package: ${{ env.APP_NAME }}
          package_root: .debpkg
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ steps.version.outputs.version }}
          arch: 'amd64'
          desc: '${{ env.DESC }}'
  
  
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-deb
          path: |
            ./*.deb
      
 create-release:
    runs-on: ubuntu-22.04
    needs:
      - build-linux-packages
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build-linux-packages.outputs.version }}
          release_name: ${{ needs.build-linux-packages.outputs.version }}
          draft: false
          prerelease: false

      - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt

      - uses: actions/upload-artifact@v3
        with:
          name: create-release
          path: upload_url.txt

 upload-linux-packages:
    runs-on: ubuntu-22.04
    needs: create-release
    strategy:
      matrix:
        include:
          - pkg: deb
            asset_content_type: application/vnd.debian.binary-package
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact-${{ matrix.pkg }}

      - uses: actions/download-artifact@v3
        with:
          name: create-release

      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          echo "::set-output name=asset_name::$(ls *.${{ matrix.pkg }} | head -n 1)"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ steps.vars.outputs.asset_name }}
          asset_name: ${{ steps.vars.outputs.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}
